<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.jba</groupId>
		<artifactId>filebeat-spring-boot-starter-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<packaging>jar</packaging>
	<artifactId>filebeat-spring-boot-starter-sample-app</artifactId>
	<name>filebeat-spring-boot-starter-sample-app</name>
	<description>Sample app for Filebeat Spring Boot starter project</description>

	<properties>
		<asciidoctor-maven-plugin.version>1.5.3</asciidoctor-maven-plugin.version>
		<frontend-maven-plugin.version>1.7.6</frontend-maven-plugin.version>
		<node.version>v8.11.3</node.version>
		<npm.version>6.3.0</npm.version>
		<!-- Fabric8 -->
		<io.fabric8.skip>false</io.fabric8.skip>
		<io.fabric8.dockerHost>http://127.0.0.1:2375</io.fabric8.dockerHost>
		<io.fabric8.registry>index.docker.io</io.fabric8.registry>
		<io.fabric8.repository>https://index.docker.io/judebantony</io.fabric8.repository>
		<io.fabric8.registry.user>index.docker.io/judebantony</io.fabric8.registry.user>
		<io.fabric8.registry.local.user>judebantony</io.fabric8.registry.local.user>
		<io.fabric8.namespace>default</io.fabric8.namespace>
		<springfox-swagger2.version>2.9.2</springfox-swagger2.version>
		<io.fabric8.version>0.28.0</io.fabric8.version>
		<fabric8-maven-plugin.version>4.0.0</fabric8-maven-plugin.version>
		<fabric8.mode>kubernetes</fabric8.mode>
		<!-- jacoco -->
		<jacoco.version>0.8.3</jacoco.version>
		<!-- Sonar -->
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
		<sonar.host.url>http://0.0.0.0:9000</sonar.host.url>
		<sonar-maven-plugin.version>3.3.0.603</sonar-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${frontend-maven-plugin.version}</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<npmVersion>${npm.version}</npmVersion>
					<workingDirectory>target</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
					</execution>
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
					<execution>
						<id>prod</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run-script build</arguments>
						</configuration>
						<phase>generate-resources</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>${sonar.jacoco.reportPath}</jacoco-agent.destfile>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>install</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*_.class</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html</backend>
							<doctype>book</doctype>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework.restdocs</groupId>
						<artifactId>spring-restdocs-asciidoctor</artifactId>
						<version>${spring-restdocs.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${io.fabric8.version}</version>
				<inherited>false</inherited>
				<configuration>
					<dockerHost>${io.fabric8.dockerHost}</dockerHost>
					<verbose>true</verbose>
					<images>
						<image>
							<name>${io.fabric8.registry.user}/${project.build.finalName}</name>
							<build>
								<dockerFileDir>${project.basedir}</dockerFileDir>
								<tags>
									<tag>latest</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-build</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>push-image</id>
						<phase>install</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<configuration>
							<registry>${io.fabric8.registry}</registry>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8-maven-plugin.version}</version>
				<configuration>
					<verbose>true</verbose>
					<generateRoute>false</generateRoute>
					<dockerHost>${io.fabric8.dockerHost}</dockerHost>
					<registry>${io.fabric8.registry}</registry>
					<namespace>${io.fabric8.namespace}</namespace>
					<recreate>true</recreate>
					<skipBuild>true</skipBuild>
					<images>
						<image>
							<name>${io.fabric8.registry.user}/${project.build.finalName}</name>
							<build>
								<tags>
									<tag>latest</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>kube-deploy</id>
						<goals>
							<goal>resource</goal>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
